class Solution {
    struct comp {
        bool operator() (pair<int,string> &a, pair<int,string> &b){
            if(a.first != b.first) return a.first > b.first;
            return a.second < b.second;
        }
    };
    
    public:
    vector<string> topKFrequent(vector<string> &words, int k) {
        unordered_map<string,int> map;
        for(string &word : words) map[word]++;
        
        priority_queue<pair<int,string>, vector<pair<int,string>>, comp> pq;
        for(auto &it : map){
            pq.push({it.second, it.first});
            if(pq.size() > k) pq.pop();
        }
        
        vector<string> ans;
        while(pq.size()){
            ans.insert(ans.begin(), pq.top().second);
            pq.pop();
        }
        
        return ans;
    }
};