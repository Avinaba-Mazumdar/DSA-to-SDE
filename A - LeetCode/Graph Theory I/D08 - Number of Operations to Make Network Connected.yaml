class Solution {
     public:
     int makeConnected(int n, vector<vector<int>> &con) {
          if(con.size() < n-1) return -1;
          
          vector<vector<int>> adj(n);
          for(vector<int> &it : con){
               adj[it[0]].push_back(it[1]);
               adj[it[1]].push_back(it[0]);
          }
          
          vector<bool> vis(n, false);
          int components = 0;
          
          for(int i=0; i<n; i++){
               if(!vis[i]){
                    dfs(adj, vis, i);
                    components++;
               }
          }
          
          return components-1;
     }
     
     private:
     void dfs(vector<vector<int>> &adj, vector<bool> &vis, int node){
          vis[node] = true;
          
          for(int &it : adj[node]){
               if(!vis[it])
                    dfs(adj, vis, it);
          }
     }
};